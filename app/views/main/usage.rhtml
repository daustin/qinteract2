<HTML>
<HEAD>

<title>Usage Report</title>
  <%= stylesheet_link_tag 'scaffold' %>
 <%= javascript_include_tag :defaults %>
   <%= javascript_include_tag "loadimage" %>

</HEAD>


<body>

<H4>Usage Report as of <%= Time.new.to_s %> <BR>Reporting jobs for the past <%=@days_back %> days</H4>

<table border="1" cellpadding="2" cellspacing="0">
<tr nowrap bgcolor="#EEEEEE"><td><b>User/Cost Center</b></td><td><b>Job Started</b></td>
<td><b>Title</td><td><b>Run Time (mins)</b></td><td><b>CPU Usage (mins)</b></td><td><b>Improvement Via Cluster</b></td><td><b>Queue</b></td></tr>

<% grand_total = 0 
   user_total = 0 #in mins
   cc = ''
   count = 1
%>

<% for audit in @audits -%>

<% 


#init
cc = audit.cost_center if cc.eql?('') 

if ! cc.eql?(audit.cost_center)
#print summary row and reset values -%>

<tr nowrap bgcolor="#EEEEEE"><td colspan="7" align="right"><b>Total CPU_Usage (mins) for <%= cc -%>: <%=user_total.round-%></b></td></tr>

<% 
extra_time = 0
extra_time = ((audit.cluster_end - audit.cluster_start) * audit.cluster_multiple) / 60 if audit.cluster_multiple > 0
run_time = (audit.end_time - audit.start_time) / 60
extra_time = extra_time.floor.to_f
run_time = run_time.floor.to_f
user_total = run_time + extra_time
grand_total = grand_total + run_time + extra_time
cc = audit.cost_center
%>

<tr nowrap><td><%=audit.cost_center-%></td><td><%=audit.start_time-%></td><td nowrap><%=audit.job_title-%></td><td><%=run_time.round-%></td><td><%=(run_time + extra_time).round -%></td>


<td>
<%='*' if audit.queue.eql?('concur')-%>
<% if run_time.nil? || run_time <= 0 -%>
0%
<% else -%>
<%=((((run_time + extra_time)/run_time)-1)*100).round-%>%
<% end -%>
</td>

<td><%=audit.queue-%></td></tr>


<% else #then same user 

extra_time = 0
extra_time = ((audit.cluster_end - audit.cluster_start) * audit.cluster_multiple) / 60 if audit.cluster_multiple > 0
run_time = (audit.end_time - audit.start_time) / 60
extra_time = extra_time.floor.to_f
run_time = run_time.floor.to_f
grand_total = grand_total + run_time + extra_time
user_total = user_total + run_time + extra_time

-%>

<tr nowrap><td><%=audit.cost_center-%></td><td><%=audit.start_time-%></td><td><%=audit.job_title-%></td><td><%=run_time.round-%></td><td><%=(run_time + extra_time).round -%></td>

<td>
<%='*' if audit.queue.eql?('concur')-%>
<% if run_time.nil? || run_time <= 0 -%>
0%
<% else -%>
<%=((((run_time + extra_time)/run_time)-1)*100).round-%>%
<% end -%>
</td>

<td><%=audit.queue-%></td></tr>


<% end -%>



<% if count.eql?(@audits.size) # last row. print total at end 
-%>

<tr nowrap bgcolor="#EEEEEE"><td colspan="7" align="right"><b>Total CPU_Usage (mins) for <%= cc -%>: <%=user_total.round-%></b></td></tr>

<tr nowrap bgcolor="#EEEEEE"><td colspan="7" align="left"><b>Grand Total CPU_Usage (mins): <%=grand_total.round-%></td></tr>

<% end -%>

<% count = count +1 -%>

<% end -%>

</table>
<BR><BR>
(*)While this job may not have benefited from the cluster independently, up to 28 jobs can be run through the "concur" queue at the same time. This means that bulk submissions run up to 28 times faster because of the cluster. 



</body>



</HTML>